DIM rc, conHndl, uHndl, periphAddr$, uuid$, sAttr, eAttr, cValAttr
DIM sensor AS STRING

periphAddr$ = "\01\F2\EB\68\5E\2B\E7"

rc = BleGATTcOpen(0,0)
PRINT "\nopen GATT client"

rc=BleConnect(periphAddr$, 10000, 20000, 100000, 10000000)
IF rc==0 THEN
	PRINT "\nConnecting to Peer Address: "; StrHexize$(periphAddr$)
ELSE
	PRINT "\nError: "; INTEGER.H'rc
ENDIF
 
'//This handler will be called in the event of a connection timeout
FUNCTION HndlrConnTO()
	PRINT "\nConnection timeout"
ENDFUNC 0

//==============================================================================
// Ble event handler
//==============================================================================
FUNCTION HndlrBleMsg(nMsgId, nCtx)
	DIM uu$
	conHndl=nCtx
	IF nMsgId == 1 THEN
		PRINT "\n\n- Disconnected"
		EXITFUNC 0
	ELSEIF nMsgID==0 THEN
		PRINT "\n\nConnected with ConnectionHandle: ";conHndl
		
		uu$ = "F000AB3004514000B000000000000000"
		PRINT "\n\nScan for service with custom uuid ";uu$;"..."
		uu$ = StrDehexize$(uu$)
		uHndl = BleHandleUuid128(uu$)
		rc = BleDiscServiceFirst(conHndl,0,uHndl)
		IF rc==0 THEN
			//HandlerPrimSvc() will exit with 0 when operation is complete
			WAITEVENT
		ENDIF
		
		uu$ = "F000180F04514000B000000000000000"
		PRINT "\n\nScan for service with custom uuid ";uu$;"..."
		uu$ = StrDehexize$(uu$)
		uHndl = BleHandleUuid128(uu$)
		rc = BleDiscServiceFirst(conHndl,0,uHndl)
		IF rc==0 THEN
			//HandlerPrimSvc() will exit with 0 when operation is complete
			WAITEVENT
			rc=BleDisconnect(conHndl)
		ENDIF
				
	ENDIF
ENDFUNC 1

//==============================================================================
// EVDISCPRIMSVC event handler
//==============================================================================
FUNCTION HandlerPrimSvc(cHndl,svcUuid,sHndl,eHndl) AS INTEGER
	PRINT "\nEVDISCPRIMSVC :"
	PRINT " cHndl=";cHndl
	PRINT " svcUuid=";integer.h' svcUuid
	PRINT " sHndl=";sHndl
	PRINT " eHndl=";eHndl
	IF sHndl == 0 THEN
		PRINT "\nScan complete"		
		EXITFUNC 0
	ELSE
		PRINT "\n\nScan for the characteristics of the service..."
		sAttr = sHndl
		eAttr = eHndl
		rc = BleDiscCharFirst(conHndl,0,sAttr,eAttr)
		IF rc != 0 THEN
			PRINT "\nScan characteristics failed"			
			EXITFUNC 0
		ENDIF
	ENDIF
ENDFUNC 1

'//==============================================================================
// EVDISCCHAR event handler
'//==============================================================================
function HandlerCharDisc(cHndl,cUuid,cProp,hVal,isUuid) as integer
	print "\nEVDISCCHAR :"
	print " cHndl=";cHndl
	print " chUuid=";integer.h' cUuid
	print " Props=";cProp
	print " valHndl=";hVal
	print " ISvcUuid=";isUuid
	IF hVal == 0 THEN
		PRINT "\nCharacteristic Scan complete"
		EXITFUNC 0
	ELSE
		cValAttr = hVal
		rc = BleDiscDescFirst(conHndl,0,cValAttr)
		rc = BleDiscCharNext(conHndl)
		IF rc != 0 THEN
			PRINT "\nCharacteristics scan abort"
			EXITFUNC 0
		ENDIF
	ENDIF
ENDFUNC 1

'//==============================================================================
// EVDISCDESC event handler
'//==============================================================================
function HandlerDescDisc(cHndl,cUuid,hndl) as integer
	print "\nEVDISCDESC"
	print " cHndl=";cHndl
	print " dscUuid=";integer.h' cUuid
	print " dscHndl=";hndl
	IF hndl == 0 THEN
		PRINT "\nDescriptor Scan complete"
		EXITFUNC 0
	ELSE
		rc = BleDiscDescNext(cHndl)
		IF rc != 0 THEN
			PRINT "\nDescriptor scan abort"
			EXITFUNC 0
		ENDIF
	ENDIF
endfunc 1

//==============================================================================
// Disconnected
//==============================================================================
FUNCTION HndlrDiscon(nCtx, nRsn)
	PRINT "\nDisconnected"
ENDFUNC 0

//==============================================================================
// Main() equivalent
//==============================================================================
ONEVENT EVBLE_CONN_TIMEOUT CALL HndlrConnTO
ONEVENT EVDISCON 		   CALL HndlrDiscon
ONEVENT EVBLEMSG 		   CALL HndlrBleMsg
ONEVENT EVDISCPRIMSVC 	   CALL HandlerPrimSvc
ONEVENT EVDISCCHAR 		   CALL HandlerCharDisc
OnEvent EVDISCDESC 		   call HandlerDescDisc

//Register base uuids with the underlying stack, otherwise the services with the
//128bit uuid's will be delivered with a uuid handle == FF000000 == UNKNOWN
uuid$ = "F000AB3004514000B000000000000000"
uuid$ = StrDehexize$(uuid$)
uHndl = BleHandleUuid128(uuid$)

uuid$ = "F000180F04514000B000000000000000"
uuid$ = StrDehexize$(uuid$)
uHndl = BleHandleUuid128(uuid$)

WAITEVENT
